plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ryokugyoku'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ★ 追加 : JPA ＆ PostgreSQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly  'org.postgresql:postgresql:42.7.3'   // バージョンは最新安定版で調整
    implementation 'org.flywaydb:flyway-core'
    // --- Lombok ------------------------------------------
    compileOnly             'org.projectlombok:lombok'      // ✔ artifactId を明示
    annotationProcessor     'org.projectlombok:lombok'
    testCompileOnly         'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'




}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * ① bootRun 時は local プロファイルを自動付与
 */
tasks.named('bootRun') {
    systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'local')
}

/**
 * ② bootJar 生成後に MANIFEST に prod プロファイルを埋め込む
 *    （--spring.profiles.active を書かなくても prod で起動するようにする）
 */
tasks.named('bootJar') {
    manifest {
        attributes(
                // Spring Boot が参照するエントリポイント
                'Start-Class': 'com.ryokugyoku.YourApplication',
                // デフォルト･プロファイルを prod に
                'Spring-Boot-ActiveProfiles': 'prod'
        )
    }
}

